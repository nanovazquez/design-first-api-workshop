swagger: "2.0"
info:
  description: This is the API for the NodeConf AR 2018
  version: 1.0.0
  title: NodeConf API
  contact:
    email: hello@nodeconf.com.ar
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /nodeconf18-api-spec/nodeconf-api/1.0.0
schemes:
  - https

paths:
  /editions/{editionId}/speakers:
    parameters:
      - $ref: "#/parameters/editionId"
    get:
      summary: Retrieves the speakers
      produces:
        - application/json
      responses:
        200:
          description: all speakers of the edition
          schema:
            type: array
            items:
              $ref: "#/definitions/Speaker"
        default:
          $ref: "#/definitions/ErrorResponse"

  /editions/{editionId}/activities:
    parameters:
      - $ref: "#/parameters/editionId"
    get:
      summary: Searches for activities of an edition
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up activities
          required: false
          type: string
      produces:
        - application/json
      responses:
        200:
          description: A list of activities that meet the search criteria
          schema:
            type: array
            items:
              $ref: "#/definitions/Activity"
        default:
          $ref: "#/definitions/ErrorResponse"

  /editions/{editionId}/feedback:
    parameters:
      - $ref: "#/parameters/editionId"
    post:
      summary: Adds feedback to an activity
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: activityId
          in: formData
          description: The ID of the activity
          format: uuid
          required: true
          type: string
        - name: username
          in: formData
          description: Name of the user
          required: true
          type: string
        - name: rating
          in: formData
          description: Rating provided
          required: true
          type: integer
          enum: [1, 2, 3, 4, 5]
      responses:
        201:
          description: The Feedback was received
          schema:
            $ref: "#/definitions/Feedback"
        default:
          $ref: "#/definitions/ErrorResponse"

definitions:
  Speaker:
    type: object
    required:
      - id
      - name
      - imageUrl
    properties:
      id:
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      name:
        type: string
        example: Mariano Vazquez
      description:
        type: string
        example: Tech Lead @ Mulesoft
      imageUrl:
        type: string
        format: uri
        example: //raw.githubusercontent.com/nodeconfar/2018-website/gh-pages/assets/images/speakers/vazquez-on.jpg
      githubAccount:
        type: string
        example: "@nanovazquez87"
      twitterAccount:
        type: string
        example: "@nanovazquez87"

  Activity:
    type: object
    required:
      - id
      - name
      - type
    properties:
      id:
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      name:
        type: string
        example: Design First APIs with OAS
      description:
        type: string
        example: Workshop to learn how to design APIs with Swagger/OpenAPI
      type:
        type: string
        enum: [talk, workshop, keynote, break, lunch, raffle]
      speakers:
        type: array
        items:
          $ref: "#/definitions/Speaker"
      startTime:
        type: string
        example: "2018-10-18T19:30:00Z"
      endTime:
        type: string
        example: "2018-10-18T20:00Z"

  Feedback:
    type: object
    required:
      - id
      - activityId
      - username
      - rating
    properties:
      id:
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      activityId:
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      username:
        type: string
        example: John Doe
      rating:
        type: integer
        enum: [1, 2, 3, 4, 5]

  ErrorResponse:
    description: Response containing an error
    type: object
    properties:
      errorMessage:
        type: string
        example: 500 Internal Server Error

parameters:
  editionId:
    name: editionId
    in: path
    description: Year of the hosted edition
    required: true
    type: integer
